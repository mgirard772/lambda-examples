AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification template describing your function.
Parameters:
  KafkaBroker:
    Description: Kafka Broker
    Type: String
  Topic:
    Description: Kafka topic to monitor
    Type: String
  Role:
    Description: Lambda Role
    Type: String
  VPCSubnet:
    Description: VPC Subnet ID
    Type: String
  VPCSecurityGroup:
    Description: VPC Security Group ID
    Type: String
  SecretArn:
    Description: ARN to secret in SecretsManager containing username and password
    Type: String
Resources:
  lambdaconsumertest:
    Type: 'AWS::Serverless::Function'
    Properties:
      PackageType: Image
      ImageConfig:
        Command: ["lambda_function.lambda_handler"]
      Description: 'Lambda Kafka consumer example'
      MemorySize: 128
      Timeout: 3
      Role: !Sub "${Role}"
      Events:
        SelfManagedKafkaEvent:
          Type: SelfManagedKafka
          Properties:
            BatchSize: 1000
            Enabled: true
            MaximumBatchingWindowInSeconds: 1
            KafkaBootstrapServers:
              - !Ref KafkaBroker
            SourceAccessConfigurations:
              - Type: VPC_SUBNET
                URI: !Sub "subnet:${VPCSubnet}"
              - Type: VPC_SECURITY_GROUP
                URI: !Sub "security_group:${VPCSecurityGroup}"
              - Type: BASIC_AUTH
                URI: !Ref SecretArn
            Topics:
              - !Ref Topic
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./
      DockerTag: python3.9-v1
Outputs:
  FunctionArn:
    Description: "Lambda consumer function ARN"
    Value: !GetAtt lambdaconsumertest.Arn
